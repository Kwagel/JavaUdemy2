<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.BorderPane?>
<!--Border Pane doenst support the alignmnet property as objects can only be in the 5 defined spaces of bored pane.-->
<!--BorderPane only contains top bottom, left right and center, with left and right overwriting center, and top and bottom added normally-->
<?import javafx.scene.control.Label?>
<BorderPane fx:controller="JavaFXBorderPane.Controller" xmlns:fx="http://javafx.com/fxml">
    <top>
        <!--        the alignment talks about the centring of the text in the label, but labels are always the size of the required string length-->
        <!--        using Border Pane alignment will do the behaviour that you expect-->
        <Label text="This label is in the top position" alignment="center" BorderPane.alignment="CENTER"
               style="-fx-border-color: blue; -fx-border-width: 3; -fx-border-style: dashed "/>
    </top>
    <center>
        <Label text="This label is in the center position and has a realllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllly long text"/>
    </center>
    <left>
        <Label text="This label is in the left position" alignment="CENTER"/>

    </left>
    <right>
        <Label text="This label is in the right position" alignment="CENTER"/>
    </right>
    <bottom>


        <HBox spacing="10" alignment="CENTER_RIGHT">
            <padding>
                <Insets bottom="10" right="10"/>
            </padding>
            <Button text="Okay" prefWidth="90"/>
            <Button text="Cancel" prefWidth="90"/>
            <Button text="Help" prefWidth="90"/>
        </HBox>
    </bottom>
</BorderPane>
